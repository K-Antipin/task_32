# версия синтаксиса
version: '3'
 
# в этом блоке мы описываем контейнеры, которые будут запускаться
services:
 
  #контейнер с Nginx
  webserver:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: myapp/nginx
    container_name: webserver
    volumes:
       - ./code:/data/application.local

    # проброс портов
    ports:
      - "80:80"
      - "443:443"
    networks:
      - app-network

  #Контейнер с PHP, назовём его app
  app:
    # Если нет секции build, то система будет искать образ в репозиториях
    build:
      context: ./fpm
      dockerfile: Dockerfile
    image: myapp/php # имя будущего образа
    container_name: app # имя контейнера после запуска
    volumes:
       - ./code:/data/application.local
    command: sh -c "composer install && php-fpm"
    # мы можем создать для контейнеров внутреннюю сеть
    networks:
      - app-network
 
  # контейнер с MySQL
  # строим на базе стандартного образа
  db:
    build:
      context: ./mysql
      dockerfile: Dockerfile
    image: mysql:8
    container_name: db
    ports:
      - "3306:3306"
    # описываем, какую БД мы создаём
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./dbdata:/var/lib/mysql
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci
    networks:
      - app-network

  # контейнер с PhpMyAdmin
  phpmyadmin:
    image: phpmyadmin
    restart: always
    ports:
      - 8070:80
    environment:
      - PMA_ARBITRARY=1
    container_name: phpmyadmin
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge